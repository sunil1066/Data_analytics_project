setwd("~/R/csv/gerber")
gerber= read.csv("gerber.csv")
str(gerber)
library(rpart)
cartmodel= rpart(voting ~ hawthorne + civicduty+ nieghbors+ self, data= gerber)
cartmodel= rpart(voting ~ hawthorne + civicduty+ neighbors+ self, data= gerber)
prp(cartmodel)
library(rpart.plot)
prp(cartmodel)
prp(cartmodel)
summary(cartmodel)
cartmodel= rpart(voting ~ hawthorne + civicduty+ neighbors+ self, data= gerber, cp=0.0)
prp(cartmodel)
summary(cartmodel)
str(cartmodel)
summary(cartmodel)
str(gerber)
cartmodel1= rpart(voting ~ hawthorne + civicduty+ neighbors+ self + sex, data= gerber, cp=0.0)
prp(cartmodel1)
control= rpart(voting ~ hawthorne + civicduty+ neighbors+ self + sex+ control, data= gerber, cp=0.0)
prp(control)
predict1= predict(control)
predict2= predict(cartmodel1)
abs(predict1-predict2)
control= rpart(voting ~ hawthorne + civicduty+ neighbors+ self + sex+ control, data= gerber, cp=0.0)
mod= rpart(voting ~ control, data=gerber)
prp(mod)
mod= rpart(voting ~ control+sex, data=gerber)
mod= rpart(voting ~ control, data=gerber)
mod1= rpart(voting ~ control+sex, data=gerber)
prp(mod1)
prp(mod)
mod= rpart(voting ~ control, data=gerber, cp=0.0)
prp(mod)
mod1= rpart(voting ~ control+sex, data=gerber, cp=0.0)
prp(mod1)
prp(mod, "digits=6")
prp(mod,digits=6)
prp(mod1)
prp(mod1,digits=6)
.345818-.334176
log= glm(voting ~ control+sex, data=gerber, family="binomial")
summary(log)
possibilities= data.frame(sex= c(0,0,1,1) , control=c(0,1,0,1))
possibilities
predict= predict(log, newdata=possibilities, type="Response")
predict= predict(log, newdata=possibilities, type="response")
predict
prp(predict)
library(rpart.plot)
prp(predict)
prp(predict)
.290456-.2908065
log1= glm(vpting ~ sex+control+sex:control, data=gerber, family="binomial")
log1= glm(voting ~ sex+control+sex:control, data=gerber, family="binomial")
summary(log1)
str(log1)
predict= predict(log1, newdata=possibilities, type="response")
predict
.290456-.2904558
summary(log1)
sex:control
gerber$sex:gerber$control
str(gerber)
table(sex, control)
table(gerber$sex, gerber$control)
table(gerber$sex)
76465+95824
setwd("~/R/csv/letters")
letters= read.csv("letters_ABPR.csv")
str(letters)
letters$isB = as.factor(letters$letter == "B")
str(letters)
letters$isB = (letters$letter == "B")
str(letters)
letters$isB = as.factor(letters$letter == "B")
str(letters)
set.seed(1000)
split= sample.split(letters$isB, SplitRatio=0.5)
library(caTools)
set.seed(1000)
split= sample.split(letters$isB, SplitRatio=0.5)
train= subset(letters, split==TRUE)
test= subset(letters, split==FALSE)
predictletters= predict(letters$isB, newdata= test)
predictletters= predict(as.factor(letters$isB), newdata= test)
predict(letters)
predict(letters, newdata=test)
predict(letters$letter, newdata=test)
as.factor(predict(letters$letter, newdata=test))
table(train$isB)
table(test$isB)
table(as.factor(test$isB))
as.factor(table(test$isB))
library(rpart)
library(rpart.plot)
cart= rpart(isB ~ .-letter, data=train, type="class")
cart= rpart(isB ~ .-letter, data=train, method="class")
prp(cart)
pcart= predict(cart, newdata=test, type="class")
table(Letters$isB, pcart)
table(letters$isB, pcart)
table(train$isB, pcart)
(880+102)/(880+295+281+102)
table(test$isB, pcart)
(1118+340)/(1118+57+43+340)
forest= rpart(isB ~ .-letter, data=train)
pforest= predict(forest, newdata=test)
table(test$isB, pforest)
table(train$isB, pforest)
table(train$isB, pforest)
set.seed(1000)
forest= rpart(isB ~ .-letter, data=train)
pforest= predict(forest, newdata=test)
table(test$isB, pforest)
prp(forest)
prp(forest)
pforest= predict(forest, newdata=test)
pforest
forest= rpart(isB ~ .-letter, data=train)
forest= randomforest(isB ~ .-letter, data=train)
library(randomforest)
install.packages("randomforest")
library(randomforest)
install.packages("randomForest")
library(randomForest)
forest= randomForest(isB ~ .-letter, data=train)
pforest= predict(forest, newdata=test)
table(test$isB, pforest)
1164+737/nrow(test)
(1164+737)/nrow(test)
(1164+37)/nrow(test)
(1164+373)/nrow(test)
letters$letter= as.factor(letters$letter)
str(letters)
set.seed(2000)
split1= sample.split(letters$letter, SplitRatio=0.5)
train1= subset(letters, split1==TRUE)
test1= subset(letters, split1==FALSE)
table(train1$letter)
table(test1$letter)
401/nrow(test)
cart2= rpart(letter ~ .-isB, data=train1, method="class")
pcart2= predict(cart2, newdata=test1, type="class")
table(tset$letter, pcart2)
table(test$letter, pcart2)
(101+89+98+127)/nrow(test)
table(test1$letter, pcart2)
(348+318+363+340)/nrow(test1)
forest2= randomForest(letter ~ .-isB, data=train1)
set.seed(1000)
forest2= randomForest(letter ~ .-isB, data=train1)
pforest2= predict(forest2, newdata=test1)
table(test1$letter, pforest2)
(390+380+393+364)/nrow(test1)
